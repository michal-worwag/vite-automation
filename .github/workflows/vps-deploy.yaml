---
name: Deploy on VPS

on:
  workflow_dispatch:
    inputs:
      docker_image_url:
        description: 'Docker image URL'
        required: true
        type: string
  workflow_call:
    inputs:
      docker_image_url:
        description: 'Docker image URL'
        required: true
        type: string
env:
  USER_PATH: '/home/automation'

jobs:
  check:
    name: Prerequisites Check
    runs-on: ubuntu-latest
    outputs:
      has_gh_secrets: ${{ steps.check-gh-key-secret.outputs.declared }}
    steps:
      - name: Check for GitHub Secret availability
        id: check-gh-key-secret
        shell: bash
        run: |
          if [[ ! -z  "${{ secrets.VPS_PASSWORD }}" ]] && [[ ! -z  "${{ secrets.VPS_USERNAME }}" ]] && [[ ! -z  "${{ secrets.VPS_HOST }}" ]] && [[ ! -z  "${{ secrets.VPS_PORT }}" ]] && [[ ! -z  "${{ secrets.VPS_KEY }}" ]]; then
            echo "All secrets are declared."
            echo "declared=true" >> $GITHUB_OUTPUT;
          else
            echo "At least one secret is missing: VPS_PASSWORD, VPS_USERNAME, VPS_HOST, VPS_PORT, VPS_KEY."
            exit 1
          fi

  prepare-environment:
    runs-on: ubuntu-latest
    name: Prepare Environment
    needs: [check]
    if: needs.check.outputs.has_gh_secrets
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

  docker-deploy:
    name: Deploy - ${{ inputs.docker_image_url }}
    runs-on: ubuntu-latest
    needs: [prepare-environment]
    steps:
      - name: Deploy on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          key: ${{ secrets.VPS_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u github.actor --password-stdin
            docker pull ${{ inputs.docker_image_url }}
            cd ${{ env.USER_PATH }}
            export IMAGE_URL=${{ inputs.docker_image_url }}
            docker compose up -d
